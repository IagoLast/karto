{"version":3,"sources":["webpack:///webpack/bootstrap c81afcdf284bb60b23c1","webpack:///./karto.js","webpack:///./services/injector.service.js","webpack:///./classes/Layer.js","webpack:///./index.js","webpack:///./services/api.service.js","webpack:///./services/config.service.js","webpack:///./services/render.service.js"],"names":["Karto","constructor","$injector","renderService","configService","Layer","layers","loadConfig","config","parse","initMap","addLayers","then","drawLayers","layersInfo","Promise","all","map","addLayer","bind","forEach","layer","show","layerConfig","$index","zIndex","apiUrl","createLayer","init","apiService","_getTileUrl","create","url","view","hide","setZIndex","index","setSQL","sql","options","getLayerUrl","fetch","res","json","initApp","karto","window","method","headers","HEADERS","body","_buildBody","data","layergroupid","Headers","JSON","stringify","center","_parseCenter","zoom","_getLayers","_generateUrl","maps_api_config","type","maps_api_template","replace","user_name","mapId","L","remove","addTo","tileLayer"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c81afcdf284bb60b23c1","\n/**\n * This is the library main file.\n * This allows to draw a map simply passing a configuraton file.\n * The map is just a list of Layers.\n */\nexport default class Karto {\n  constructor($injector) {\n    this.$injector = $injector;\n    this.renderService = $injector.renderService;\n    this.configService = $injector.configService;\n    this.Layer = $injector.Layer;\n    this.layers = [];\n  }\n\n  /**\n   * Create a new map from a json config.\n   * Once the config is correctly parsed and transformed into a `MapConfig` the layers are stored and drawn.\n   */\n  loadConfig(config) {\n    this.config = this.configService.parse(config);\n    this.renderService.initMap(this.config);\n    this.addLayers(this.config.layers).then(this.drawLayers);\n  }\n\n  /**\n   * Add a layer list to the Karto map.\n   * The `layers` field is a `MapConfig.layers` object. https://carto.com/docs/carto-engine/maps-api/mapconfig\n   */\n  addLayers(layersInfo) {\n    return Promise.all(layersInfo.map(this.addLayer.bind(this)))\n      .then(layers => {\n        this.layers = layers;\n        return layers;\n      });\n  }\n\n  // Show a list of layers\n  drawLayers(layers) {\n    layers.forEach(layer => layer.show());\n  }\n\n  // Create a new Layer object and add it to the layer list.\n  addLayer(layerConfig, $index) {\n    layerConfig.zIndex = $index;\n    layerConfig.apiUrl = this.config.apiUrl;\n    return this.createLayer(layerConfig).init();\n  }\n\n  // Create a new layers\n  createLayer(layerConfig) {\n    return new this.Layer(layerConfig, this.$injector);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./karto.js","import apiService from './api.service.js';\nimport configService from './config.service.js';\nimport renderService from './render.service.js';\nimport Layer from '../classes/Layer.js';\n\n\nexport default {\n  apiService,\n  configService,\n  renderService,\n  Layer,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./services/injector.service.js","export default class Layer {\n  /**\n   * The constructor gets the renderService and the apiService injected by the Karto object\n   * This way is easier to mock, test and change implementations.\n   */\n  constructor(layerConfig, {renderService, apiService}) {\n    this.config = layerConfig;\n    this.renderService = renderService;\n    this.apiService = apiService;\n  }\n\n  init() {\n    return this._getTileUrl().then(this.create.bind(this));\n  }\n\n  create(url) {\n    this.view = this.renderService.create(url);\n    return this;\n  }\n\n  hide() {\n    this.renderService.hide(this);\n  }\n\n  show() {\n    this.renderService.show(this);\n  }\n\n  setZIndex(index) {\n    this.renderService.setZIndex(this, index);\n  }\n\n  setSQL(sql) {\n    this.config.options.sql = sql;\n    this.hide();\n    return this._getTileUrl().then(this.create.bind(this)).then(this.show.bind(this));\n  }\n\n  _getTileUrl() {\n    return this.apiService.getLayerUrl(this.config);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./classes/Layer.js","import $injector from './services/injector.service.js';\nimport Karto from './karto.js';\n\n// Download config from server and start the app.\nfetch('config.json').then(res => res.json()).then(initApp);\n\n/**\n * App entry point.\n * Create a karto object and set the app config also expose the karto object to easy debugging.\n */\nfunction initApp(config) {\n  const karto = new Karto($injector);\n  karto.loadConfig(config);\n  window.karto = karto;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// Get the tile server url from a given layer configuration\nexport function getLayerUrl(layer) {\n  return fetch(layer.apiUrl, {\n    method: 'POST',\n    headers: HEADERS,\n    body: _buildBody(layer),\n  })\n    .then(data => data.json())\n    .then(data => `https://ashbu.cartocdn.com/documentation/api/v1/map/${data.layergroupid}/0/{z}/{x}/{y}.png`);\n}\n\nconst HEADERS = new Headers({\n  'Content-Type': 'application/json'\n});\n\nfunction _buildBody(layer) {\n  return JSON.stringify({\n    layers: [layer]\n  });\n}\n\n\nexport default {\n  getLayerUrl\n};\n\n\n\n// WEBPACK FOOTER //\n// ./services/api.service.js","/**\n * Return a MapConfig object from the given config.json file\n */\nexport function parse(config) {\n  return {\n    center: _parseCenter(config.center),\n    zoom: config.zoom,\n    layers: _getLayers(config.layers),\n    apiUrl: _generateUrl(config.maps_api_config),\n  };\n}\n\n/**\n *  The config.json layer type does not match the MapConfig object expected by carto.\n *  this function fixes some fields to create compatibility.\n */\nfunction _getLayers(layers) {\n  return layers.map(layer => {\n    if (layer.type === 'CartoDB') {\n      layer.type = 'cartodb';\n    }\n    if (layer.type === 'tiled') {\n      layer.type = 'http';\n    }\n    return layer;\n  });\n}\n\n// Use the maps_api_config to build an URL. ie: http://documentation.cartodb.com/api/v1/map\nfunction _generateUrl(config) {\n  return config.maps_api_template.replace('{user}', config.user_name) + '/api/v1/map';\n}\n\nfunction _parseCenter(center) {\n  return JSON.parse(center);\n}\n\nexport default {\n  parse\n};\n\n\n\n// WEBPACK FOOTER //\n// ./services/config.service.js","var map;\n\nexport function initMap(options, mapId = 'map') {\n  map = L.map(mapId, options);\n}\n\nexport function hide(layer) {\n  layer.view.remove();\n}\n\nexport function show(layer) {\n  layer.view.addTo(map);\n  layer.view.setZIndex(layer.config.zIndex);\n}\n\nexport function create(url) {\n  return L.tileLayer(url);\n}\n\nexport function setZIndex(layer, index) {\n  layer.view.setZIndex(index);\n}\n\n\nexport default {\n  initMap,\n  create,\n  hide,\n  show,\n  setZIndex,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./services/render.service.js"],"sourceRoot":""}